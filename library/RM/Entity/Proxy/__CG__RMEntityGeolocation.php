<?php

namespace RM\Entity\Proxy\__CG__\RM\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Geolocation extends \RM\Entity\Geolocation implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function getCountryCode()
    {
        $this->__load();
        return parent::getCountryCode();
    }

    public function setCountryCode($countryCode)
    {
        $this->__load();
        return parent::setCountryCode($countryCode);
    }

    public function getPostalCode()
    {
        $this->__load();
        return parent::getPostalCode();
    }

    public function setPostalCode($postalCode)
    {
        $this->__load();
        return parent::setPostalCode($postalCode);
    }

    public function getPlaceName()
    {
        $this->__load();
        return parent::getPlaceName();
    }

    public function setPlaceName($placeName)
    {
        $this->__load();
        return parent::setPlaceName($placeName);
    }

    public function getAdminName1()
    {
        $this->__load();
        return parent::getAdminName1();
    }

    public function setAdminName1($adminName1)
    {
        $this->__load();
        return parent::setAdminName1($adminName1);
    }

    public function getAdminCode1()
    {
        $this->__load();
        return parent::getAdminCode1();
    }

    public function setAdminCode1($adminCode1)
    {
        $this->__load();
        return parent::setAdminCode1($adminCode1);
    }

    public function getAdminName2()
    {
        $this->__load();
        return parent::getAdminName2();
    }

    public function setAdminName2($adminName2)
    {
        $this->__load();
        return parent::setAdminName2($adminName2);
    }

    public function getAdminCode2()
    {
        $this->__load();
        return parent::getAdminCode2();
    }

    public function setAdminCode2($adminCode2)
    {
        $this->__load();
        return parent::setAdminCode2($adminCode2);
    }

    public function getAdminName3()
    {
        $this->__load();
        return parent::getAdminName3();
    }

    public function setAdminName3($adminName3)
    {
        $this->__load();
        return parent::setAdminName3($adminName3);
    }

    public function getAdminCode3()
    {
        $this->__load();
        return parent::getAdminCode3();
    }

    public function setAdminCode3($adminCode3)
    {
        $this->__load();
        return parent::setAdminCode3($adminCode3);
    }

    public function getLatitude()
    {
        $this->__load();
        return parent::getLatitude();
    }

    public function setLatitude($latitude)
    {
        $this->__load();
        return parent::setLatitude($latitude);
    }

    public function getLongitude()
    {
        $this->__load();
        return parent::getLongitude();
    }

    public function setLongitude($longitude)
    {
        $this->__load();
        return parent::setLongitude($longitude);
    }

    public function getAccuracy()
    {
        $this->__load();
        return parent::getAccuracy();
    }

    public function setAccuracy($accuracy)
    {
        $this->__load();
        return parent::setAccuracy($accuracy);
    }

    public function getLocation()
    {
        $this->__load();
        return parent::getLocation();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'countryCode', 'postalCode', 'placeName', 'adminName1', 'adminCode1', 'adminName2', 'adminCode2', 'adminName3', 'adminCode3', 'latitude', 'longitude', 'accuracy');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}