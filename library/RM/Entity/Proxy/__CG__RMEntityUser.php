<?php

namespace RM\Entity\Proxy\__CG__\RM\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class User extends \RM\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function getEmail()
    {
        $this->__load();
        return parent::getEmail();
    }

    public function setEmail($email)
    {
        $this->__load();
        return parent::setEmail($email);
    }

    public function getCreatedTime()
    {
        $this->__load();
        return parent::getCreatedTime();
    }

    public function setCreatedTime($createdTime)
    {
        $this->__load();
        return parent::setCreatedTime($createdTime);
    }

    public function getPassword()
    {
        $this->__load();
        return parent::getPassword();
    }

    public function setPassword($password)
    {
        $this->__load();
        return parent::setPassword($password);
    }

    public function getFirstName()
    {
        $this->__load();
        return parent::getFirstName();
    }

    public function setFirstName($firstName)
    {
        $this->__load();
        return parent::setFirstName($firstName);
    }

    public function getLastName()
    {
        $this->__load();
        return parent::getLastName();
    }

    public function setLastName($lastName)
    {
        $this->__load();
        return parent::setLastName($lastName);
    }

    public function getFullName()
    {
        $this->__load();
        return parent::getFullName();
    }

    public function getRole()
    {
        $this->__load();
        return parent::getRole();
    }

    public function setRole($role)
    {
        $this->__load();
        return parent::setRole($role);
    }

    public function isGuest()
    {
        $this->__load();
        return parent::isGuest();
    }

    public function isRecruiter()
    {
        $this->__load();
        return parent::isRecruiter();
    }

    public function isSeeker()
    {
        $this->__load();
        return parent::isSeeker();
    }

    public function getUserStatus()
    {
        $this->__load();
        return parent::getUserStatus();
    }

    public function setUserStatus($userStatus)
    {
        $this->__load();
        return parent::setUserStatus($userStatus);
    }

    public function getPhoneNumber()
    {
        $this->__load();
        return parent::getPhoneNumber();
    }

    public function setPhoneNumber($phoneNumber)
    {
        $this->__load();
        return parent::setPhoneNumber($phoneNumber);
    }

    public function getLocationId()
    {
        $this->__load();
        return parent::getLocationId();
    }

    public function setLocationId($locationId)
    {
        $this->__load();
        return parent::setLocationId($locationId);
    }

    public function getSystemNotifications()
    {
        $this->__load();
        return parent::getSystemNotifications();
    }

    public function setSystemNotifications($systemNotifications)
    {
        $this->__load();
        return parent::setSystemNotifications($systemNotifications);
    }

    public function getLastLoginTime()
    {
        $this->__load();
        return parent::getLastLoginTime();
    }

    public function setLastLoginTime($lastLoginTime)
    {
        $this->__load();
        return parent::setLastLoginTime($lastLoginTime);
    }

    public function getLastIpAddress()
    {
        $this->__load();
        return parent::getLastIpAddress();
    }

    public function setLastIpAddress($lastIpAddress)
    {
        $this->__load();
        return parent::setLastIpAddress($lastIpAddress);
    }

    public function getLastUserAgent()
    {
        $this->__load();
        return parent::getLastUserAgent();
    }

    public function setLastUserAgent($lastUserAgent)
    {
        $this->__load();
        return parent::setLastUserAgent($lastUserAgent);
    }

    public function getClientDeviceId()
    {
        $this->__load();
        return parent::getClientDeviceId();
    }

    public function setClientDeviceId($clientDeviceId)
    {
        $this->__load();
        return parent::setClientDeviceId($clientDeviceId);
    }

    public function getSalt()
    {
        $this->__load();
        return parent::getSalt();
    }

    public function setSalt($salt)
    {
        $this->__load();
        return parent::setSalt($salt);
    }

    public function objectVariables()
    {
        $this->__load();
        return parent::objectVariables();
    }

    public function verifyLogin($credential)
    {
        $this->__load();
        return parent::verifyLogin($credential);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'firstName', 'lastName', 'email', 'password', 'salt', 'userStatus', 'phoneNumber', 'systemNotifications', 'createdTime', 'lastLoginTime', 'lastIpAddress', 'lastUserAgent', 'clientDeviceId', 'role', 'locationId');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}